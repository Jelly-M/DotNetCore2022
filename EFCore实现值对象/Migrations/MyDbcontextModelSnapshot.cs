// <auto-generated />
using EFCore实现值对象;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore实现值对象.Migrations
{
    [DbContext(typeof(MyDbcontext))]
    partial class MyDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCore实现值对象.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("EFCore实现值对象.Shop", b =>
                {
                    b.OwnsOne("EFCore实现值对象.Geo", "location", b1 =>
                        {
                            b1.Property<int>("Shopid")
                                .HasColumnType("int");

                            b1.Property<double>("Jingdu")
                                .HasColumnType("float");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.HasKey("Shopid");

                            b1.ToTable("Shops");

                            b1.WithOwner()
                                .HasForeignKey("Shopid");
                        });

                    b.Navigation("location")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
